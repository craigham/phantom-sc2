on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.head_ref }}
      - name: Checkout submodules
        run: git submodule update --init --recursive
      # install poetry
      - name: Install poetry
        run: pipx install poetry
      # set-up python with cache
      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'
      - name: Update pip
        run: poetry run pip install -U pip
      - name: Install requirements
        run: poetry install --extras test --extras build
      - name: Linting and Typechecking
        run: make check
      - name: Compile Cython
        run: poetry run python scripts/compile_cython.py
      - name: Save commit hash
        run: echo ${{ github.sha }} >> version.txt
      - name: Save requirements.txt
        run: poetry export --without-hashes --format=requirements.txt > requirements.txt
      - name: Compile ladder zip
        run: poetry run python scripts/create_ladder_zip.py
      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq bot.zip -d out

      - name: Run test game
        run: |
          cp -r out/lib lib
          
          docker build -t test_image -f tests/Dockerfile .
          docker run -it -d --name app1 test_image
          docker exec -i app1 bash -c "python tests/travis_test_script.py tests/run_test.py"
          docker rm -f app1
      - uses: actions/upload-artifact@v4
        with:
          name: ladder-zip
          path: out
      - name: Upload to AIArena
        env:
          UPLOAD_API_TOKEN: ${{ secrets.UPLOAD_API_TOKEN }}
          UPLOAD_BOT_ID: ${{ secrets[format('UPLOAD_BOT_ID_{0}', github.ref_name)] }}
        run: poetry run python scripts/upload_to_ai_arena.py
